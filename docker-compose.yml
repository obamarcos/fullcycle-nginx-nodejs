version: '3'

services:

  nginx:
    restart: unless-stopped
    image: nginx
    container_name: nginx
    tty: true
    ports:
      - 8080:80
    volumes: 
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - network
    depends_on:
      app:
        condition: service_healthy

  app:
    restart: unless-stopped
    build:
      context: ./nodejs
      dockerfile: Dockerfile
    container_name: app
    networks:
      - network
    volumes:   
      - ./nodejs/default.conf:/usr/src/app/default.conf
      - ./nodejs/healthcheck.js:/usr/src/app/healthcheck.js
    tty: true
    healthcheck:
      test: ["CMD", "node", "./healthcheck.js"]
      interval: 3s
      timeout: 2s
      retries: 60
      start_period: 0s
    depends_on:
      db:
        condition: service_healthy

  db:
    image: mysql:5.7
    command: "--innodb_use_native_aio=0"
    container_name: db
    restart: unless-stopped
    tty: true
    volumes:
      - ./mysql/dump:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_DATABASE=nodejsdb
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "--silent"]
      interval: 3s
      timeout: 2s
      retries: 60
      start_period: 0s
    networks:
      - network
  
networks:
  network:
    driver: bridge